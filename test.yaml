NAME: sp
LAST DEPLOYED: Wed May 26 22:13:44 2021
NAMESPACE: cardano-testnet
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: cardano-node/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    claim: cardano
    helm.sh/chart: cardano-node-0.1.0
    app.kubernetes.io/name: cardano-node
    app.kubernetes.io/instance: sp
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  name: sp-cardano-node-pvclaim
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: "manual"
  resources:
    requests:
      storage: "8Gi"
---
# Source: cardano-node/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sp-cardano-node
  labels:
    helm.sh/chart: cardano-node-0.1.0
    app.kubernetes.io/name: cardano-node
    app.kubernetes.io/instance: sp
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "12798"
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: cardano-node
    app.kubernetes.io/instance: sp
---
# Source: cardano-node/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sp-cardano-node
  labels:
    helm.sh/chart: cardano-node-0.1.0
    app.kubernetes.io/name: cardano-node
    app.kubernetes.io/instance: sp
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cardano-node
      app.kubernetes.io/instance: sp
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cardano-node
        app.kubernetes.io/instance: sp
    spec:
      serviceAccountName: default
      securityContext:
        null
      containers:
        - name: cardano-node
          securityContext:
            null
          image: "toky03/cardano-node:1.27.0"
          imagePullPolicy: Always
          
          command: ["/usr/bin/cardano-node", "run", "--topology", "topology.json", "--database-path", "/db", "--socket-path", "/db/node.socket", "--config", "config.json", "--port", "3000", "--host-addr", "0.0.0.0"]
        
        
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: monitoring
              containerPort: 12798
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: monitoring
          readinessProbe:
            httpGet:
              path: /metrics
              port: monitoring
          resources:
            null
          volumeMounts:
          - name: config
            mountPath: /config
          - name: nodedb
            mountPath: /db
      volumes:
      - name: config
        configMap: 
        
          name: "relayconfig"
        
      - name: nodedb
        persistentVolumeClaim:
          claimName: sp-cardano-node-pvclaim

